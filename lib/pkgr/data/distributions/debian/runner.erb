#!/bin/bash

set -e

EXECUTABLE=$(basename $0)

function usage {
  echo "Usage:"
  echo "  $EXECUTABLE run COMMAND [options]"
  echo "  $EXECUTABLE scale TYPE=NUM"
  echo "  $EXECUTABLE config:get VAR"
  echo "  $EXECUTABLE config:set VAR=VALUE"
  exit 1
}

if [ ! 0 -eq ${EUID} ]; then
  echo "You must be executing with root privileges to launch commands. Either log in as root, use sudo, or add sudo privileges for running ${EXECUTABLE} with your user."
  exit 1
fi

DEFAULT_FILE=/etc/default/<%= name %>

. ${DEFAULT_FILE}

while : ; do
  case "$1" in
    run)
      [ $# -lt 2 ] && usage
      COMMAND="$2"
      shift 2

      exec su -m - "${APP_USER}" -c ". ${DEFAULT_FILE} && cd ${HOME} && if [ -f vendor/pkgr/processes/${COMMAND} ]; then vendor/pkgr/processes/${COMMAND} ${*}; else ${COMMAND} ${*}; fi"
      break ;;

    scale)
      shift
      for arg in "$@"; do
        [ "$arg" = "" ] && usage

        PROCESS=(${arg//=/ })

        set +e
        PROCESS_NAME=${PROCESS[0]}
        NEW_SCALE=${PROCESS[1]}
        CURRENT_SCALE=$(ls -rv1 /etc/init/${APP_NAME}-${PROCESS_NAME}-*.conf 2>/dev/null | head -1 | sed -r 's/.*\-([0-9]+)\.conf/\1/g')
        CURRENT_SCALE=${CURRENT_SCALE:="0"}
        SCALE_DELTA=$(expr ${NEW_SCALE} - ${CURRENT_SCALE})
        set -e

        if [ $NEW_SCALE -eq 0 ]; then
          echo "Stopping all ${PROCESS_NAME} processes... "
          for file in `ls -1 /etc/init/${APP_NAME}-${PROCESS_NAME}-*.conf 2>/dev/null`; do
            service "$(basename ${file} .conf)" stop || true
            rm "${file}"
          done
          # Finally, remove master process
          rm -f "/etc/init/${APP_NAME}-${PROCESS_NAME}.conf"
          echo "--> done."
        elif [ $SCALE_DELTA -gt 0 ]; then
          echo "Scaling up..."
          cp "${HOME}/vendor/pkgr/scaling/${APP_NAME}-${PROCESS_NAME}.conf" /etc/init/
          for i in $(seq ${SCALE_DELTA}); do
            PROCESS_ID="${APP_NAME}-${PROCESS_NAME}-${i}"
            i=$(expr ${i} + ${CURRENT_SCALE})
            cp "${HOME}/vendor/pkgr/scaling/${APP_NAME}-${PROCESS_NAME}-PROCESS_NUM.conf" "/etc/init/${PROCESS_ID}.conf"
            sed -i "s/PROCESS_NUM/${i}/g" "/etc/init/${PROCESS_ID}.conf"
            if [ "${PROCESS_NAME}" = "web" ]; then
              port=$(expr ${PORT} + ${i} - 1)
              sed -i "s/PORT_NUM/${port}/g" "/etc/init/${PROCESS_ID}.conf"
            else
              sed -i "s/^env .*PORT_NUM.*$//g" "/etc/init/${PROCESS_ID}.conf"
            fi
            service "${PROCESS_ID}" start
          done
          echo "--> done."
        elif [ $SCALE_DELTA -lt 0 ]; then
          echo "Scaling down..."
          for i in $(seq $(expr $SCALE_DELTA \* -1)); do
            PROCESS_ID="${APP_NAME}-${PROCESS_NAME}-${i}"
            i=$(expr ${i} + ${NEW_SCALE})
            service "${PROCESS_ID}" stop || true
            rm -f "/etc/init/${PROCESS_ID}.conf"
          done
          echo "--> done."
        else
          echo "Nothing to do."
        fi
      done
      break ;;

    config:set)
      [ $# -lt 2 ] && usage

      CONFIG=(${2//=/ })

      VAR=${CONFIG[0]:?"Invalid variable name"}
      VALUE=${CONFIG[1]:?"Invalid value"}

      DEFAULT_CONF_FILE="/etc/${APP_NAME}/conf.d/other"

      sed -i -r "s/^.*${VAR}.*$//g" /etc/${APP_NAME}/conf.d/*

      echo "export ${VAR}=${VALUE}" >> "${DEFAULT_CONF_FILE}"

      break;;

    config:get)
      [ $# -lt 2 ] && usage
      result=$(grep --no-filename "${2}" ${DEFAULT_FILE} /etc/${APP_NAME}/conf.d/*)
      echo "${result}" | sed -r "s/^export\s+${2}=//g"
      break;;

    *)
      usage
      break ;;
  esac
done
